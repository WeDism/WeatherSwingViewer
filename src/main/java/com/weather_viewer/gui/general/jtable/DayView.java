package com.weather_viewer.gui.general.jtable;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.weather_viewer.functional_layer.application.IContext;
import com.weather_viewer.functional_layer.structs.weather.Day;
import com.weather_viewer.functional_layer.structs.weather.Workweek;
import org.jetbrains.annotations.NotNull;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;

import static com.weather_viewer.gui.consts.Sign.*;

public class DayView extends JDialog {
    private final JFrame general;
    private JPanel contentPane;
    private JLabel locationLabel;
    private JLabel dateLabel;
    private JLabel weatherLabel;
    private JLabel humidityLabel;
    private JLabel temperatureLabel;
    private JLabel pressureLabel;
    private JLabel windSpeedLabel;
    private JLabel windDegreesLabel;
    private JLabel timeLabel;

    public DayView(IContext context) {
        this.general = ((JFrame) context.get(JFrame.class));
        this.contentPane.registerKeyboardAction(e -> dispose(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
        this.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                setVisible(false);
            }
        });

        this.setMinimumSize(new Dimension(500, 400));
        this.setLocationRelativeTo(this.general);
        this.setIconImage(this.general.getIconImage());
        this.setContentPane(this.contentPane);
        this.setModal(true);
        this.setResizable(false);
        this.setVisible(false);
        this.pack();
    }

    public void updateData(@NotNull Workweek workweek, @NotNull Day day) {
        this.setTitle("Forecast per " + new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(day.getDateTime()));
        this.setData(workweek, day);
        this.setLocationRelativeTo(this.general);
        this.setVisible(true);
    }

    private void setData(@NotNull Workweek workweek, @NotNull Day day) {
        Workweek.SignatureWorkDay signatureWorkDay = workweek.getSignatureWorkDay();
        this.locationLabel.setText(String.format("%s, %s", signatureWorkDay.getCity(), signatureWorkDay.getCountry()));
        this.dateLabel.setText(new SimpleDateFormat("yyyy-MM-dd").format(day.getDateTime()));
        this.timeLabel.setText(new SimpleDateFormat("HH:mm:ss").format(day.getDateTime()));
        this.weatherLabel.setText(String.format("%s (%s)", day.getWeather(), day.getWeatherDescription()));
        this.humidityLabel.setText(day.getHumidity() + HUMIDITY);
        this.temperatureLabel.setText(day.getTemp() + CELSIUS);
        this.pressureLabel.setText(String.format("%s, %s", day.getPressure(), PRESSURE));
        this.windSpeedLabel.setText(String.format("%s, %s", day.getWindSpeed(), WIND_SPEED));
        this.windDegreesLabel.setText(day.getWindDegrees() + DEGREES);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 1, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(17, 3, new Insets(0, 0, 0, 0), -1, -1));
        contentPane.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Location");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel1.add(spacer2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        locationLabel = new JLabel();
        Font locationLabelFont = this.$$$getFont$$$("Arial", -1, 22, locationLabel.getFont());
        if (locationLabelFont != null) locationLabel.setFont(locationLabelFont);
        locationLabel.setText("value");
        panel1.add(locationLabel, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateLabel = new JLabel();
        Font dateLabelFont = this.$$$getFont$$$("Arial", -1, 22, dateLabel.getFont());
        if (dateLabelFont != null) dateLabel.setFont(dateLabelFont);
        dateLabel.setText("value");
        panel1.add(dateLabel, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        panel1.add(spacer3, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        weatherLabel = new JLabel();
        Font weatherLabelFont = this.$$$getFont$$$("Arial", -1, 22, weatherLabel.getFont());
        if (weatherLabelFont != null) weatherLabel.setFont(weatherLabelFont);
        weatherLabel.setText("value");
        panel1.add(weatherLabel, new GridConstraints(6, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        panel1.add(spacer4, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        humidityLabel = new JLabel();
        Font humidityLabelFont = this.$$$getFont$$$("Arial", -1, 22, humidityLabel.getFont());
        if (humidityLabelFont != null) humidityLabel.setFont(humidityLabelFont);
        humidityLabel.setText("value");
        panel1.add(humidityLabel, new GridConstraints(8, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        panel1.add(spacer5, new GridConstraints(9, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        panel1.add(spacer6, new GridConstraints(11, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer7 = new Spacer();
        panel1.add(spacer7, new GridConstraints(13, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer8 = new Spacer();
        panel1.add(spacer8, new GridConstraints(15, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        temperatureLabel = new JLabel();
        Font temperatureLabelFont = this.$$$getFont$$$("Arial", -1, 22, temperatureLabel.getFont());
        if (temperatureLabelFont != null) temperatureLabel.setFont(temperatureLabelFont);
        temperatureLabel.setText("value");
        panel1.add(temperatureLabel, new GridConstraints(10, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pressureLabel = new JLabel();
        Font pressureLabelFont = this.$$$getFont$$$("Arial", -1, 22, pressureLabel.getFont());
        if (pressureLabelFont != null) pressureLabel.setFont(pressureLabelFont);
        pressureLabel.setText("value");
        panel1.add(pressureLabel, new GridConstraints(12, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        windSpeedLabel = new JLabel();
        Font windSpeedLabelFont = this.$$$getFont$$$("Arial", -1, 22, windSpeedLabel.getFont());
        if (windSpeedLabelFont != null) windSpeedLabel.setFont(windSpeedLabelFont);
        windSpeedLabel.setText("value");
        panel1.add(windSpeedLabel, new GridConstraints(14, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        windDegreesLabel = new JLabel();
        Font windDegreesLabelFont = this.$$$getFont$$$("Arial", -1, 22, windDegreesLabel.getFont());
        if (windDegreesLabelFont != null) windDegreesLabel.setFont(windDegreesLabelFont);
        windDegreesLabel.setText("value");
        panel1.add(windDegreesLabel, new GridConstraints(16, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("Wind Speed");
        panel1.add(label2, new GridConstraints(14, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setText("Pressure");
        panel1.add(label3, new GridConstraints(12, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setText("Temperature");
        panel1.add(label4, new GridConstraints(10, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        Font label5Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label5.getFont());
        if (label5Font != null) label5.setFont(label5Font);
        label5.setText("Humidity");
        panel1.add(label5, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        Font label6Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label6.getFont());
        if (label6Font != null) label6.setFont(label6Font);
        label6.setText("Weather");
        panel1.add(label6, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label7 = new JLabel();
        Font label7Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label7.getFont());
        if (label7Font != null) label7.setFont(label7Font);
        label7.setText("Wind Degrees");
        panel1.add(label7, new GridConstraints(16, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label8 = new JLabel();
        Font label8Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label8.getFont());
        if (label8Font != null) label8.setFont(label8Font);
        label8.setText("Date");
        panel1.add(label8, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer9 = new Spacer();
        panel1.add(spacer9, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label9 = new JLabel();
        Font label9Font = this.$$$getFont$$$("Arial", Font.BOLD, 22, label9.getFont());
        if (label9Font != null) label9.setFont(label9Font);
        label9.setText("Time");
        panel1.add(label9, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        timeLabel = new JLabel();
        Font timeLabelFont = this.$$$getFont$$$("Arial", -1, 22, timeLabel.getFont());
        if (timeLabelFont != null) timeLabel.setFont(timeLabelFont);
        timeLabel.setText("value");
        panel1.add(timeLabel, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
